#dictonary practice 01

person = {
    "Name":"Ahmedul Hoq",
    "Age":22,
    "City": "Dhaka"
}

print(person["City"])


#dictonary practice 02

'''‡¶è‡¶ñ‡¶æ‡¶®‡ßá students ‡¶®‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶è‡¶ï‡¶ü‡¶æ Dictionary ‡¶¨‡¶æ‡¶®‡¶æ‡¶®‡ßã ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá:

Key ‡¶π‡¶≤‡ßã ‡¶õ‡¶æ‡¶§‡ßç‡¶∞‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ (string)

Value ‡¶π‡¶≤‡ßã ‡¶§‡¶æ‡¶∞ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ (int)'''

studnets = {
    "Sagar": 85,
    "Rafi": 90,
    "Nila": 78,
    "Tisha": 92
}

'''üîç ‡¶è‡¶ñ‡¶æ‡¶®‡ßá get_result ‡¶®‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶è‡¶ï‡¶ü‡¶æ function ‡¶¨‡¶æ‡¶®‡¶æ‡¶®‡ßã ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶Ø‡ßá‡¶ü‡¶æ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶®‡¶æ‡¶Æ (name) input ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶®‡ßá‡ßü‡•§

üëâ ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ .get() method ‡¶¶‡¶ø‡ßü‡ßá dictionary ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡ßá‡¶á ‡¶®‡¶æ‡¶Æ‡ßá‡¶∞ result ‡¶ñ‡ßã‡¶Å‡¶ú‡ßá‡•§
‡¶Ø‡¶¶‡¶ø ‡¶®‡¶æ ‡¶™‡¶æ‡ßü, ‡¶§‡¶æ‡¶π‡¶≤‡ßá "Student not found" ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡ßá‡•§

üìå .get() method use ‡¶ï‡¶∞‡¶≤‡ßá error ‡¶π‡ßü ‡¶®‡¶æ ‚Äî ‡¶§‡¶æ‡¶á ‡¶è‡¶ü‡¶æ safe way‡•§'''

def get_result(name):
    return studnets.get(name, "Students Not Found!")

print(get_result("Sagar"))
print(get_result("Hello"))
print(get_result("Rafi"))
print(get_result("Tisha"))
print(get_result("Hasan"))


#Practice Task 03 : Find out Top Scorer \

# Step 1: Dictionary of students
studnets = {
    "Sagar": 85,
    "Rafi": 90,
    "Nila": 78,
    "Tisha": 92
}

# Step 2: Function to find top scorer

'''üëâ max() ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡¶õ‡¶ø students dictionary ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶Ø‡ßá‡¶á key (name) ‡¶è‡¶∞ mark (value) ‡¶∏‡¶¨‡¶ö‡ßá‡¶Ø‡¶º‡ßá ‡¶¨‡ßá‡¶∂‡¶ø‡•§

‚û° key=students.get ‡¶Æ‡¶æ‡¶®‡ßá:
Python ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø student ‡¶è‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶®‡¶ø‡ßü‡ßá ‡¶§‡¶æ‡¶∞ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶¶‡ßá‡¶ñ‡¶õ‡ßá ‡¶ï‡ßá highest‡•§

üìå Example:

students.get("Sagar") ‚Üí 85

students.get("Tisha") ‚Üí 92

‚úÖ ‡¶Ø‡¶æ‡¶∞ mark ‡¶∏‡¶¨‡¶ö‡ßá‡ßü‡ßá ‡¶¨‡ßá‡¶∂‡¶ø, ‡¶§‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ top_name ‡¶è ‡¶ö‡¶≤‡ßá ‡¶Ü‡¶∏‡¶¨‡ßá‡•§'''

'''‡¶è‡¶ñ‡¶® ‡¶Ø‡ßá‡¶á top_name ‡¶™‡ßá‡¶Ø‡¶º‡ßá‡¶õ‡¶ø, ‡¶§‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶¶‡¶ø‡ßü‡ßá Dictionary ‡¶•‡ßá‡¶ï‡ßá ‡¶§‡¶æ‡¶∞ mark ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶®‡¶ø‡¶ö‡ßç‡¶õ‡¶ø‡•§

üìå ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£:

‡¶Ø‡¶¶‡¶ø top_name = "Tisha" ‡¶π‡ßü, ‡¶§‡¶æ‡¶π‡¶≤‡ßá

students["Tisha"] ‚Üí 92

‡¶è‡¶ü‡¶æ top_score ‡¶è ‡¶ö‡¶≤‡ßá ‡¶Ü‡¶∏‡¶¨‡ßá‡•§'''

def find_top_scorer():
    top_name = max(studnets, key=studnets.get)
    top_score = studnets[top_name]
    return f"Top socrer is {top_name} with {top_score}marks"
print(find_top_scorer())
"\n"
'''
üîç ‡¶è‡¶á ‡¶≤‡¶æ‡¶á‡¶®‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶è‡¶ï‡¶ü‡¶æ formatted string ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡¶õ‡¶ø‡•§
‚û° Output ‡¶π‡¶¨‡ßá ‡¶Ø‡ßá‡¶Æ‡¶®: "Top scorer is Tisha with 92 marks."
üìå f"" ‡¶Æ‡¶æ‡¶®‡ßá formatted string ‚Äî ‡¶è‡¶ñ‡¶æ‡¶®‡ßá {} ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶§‡¶∞ ‡¶≠‡ßá‡¶∞‡¶ø‡ßü‡ßá‡¶¨‡¶≤ ‡¶¨‡¶∏‡¶æ‡¶®‡ßã ‡¶Ø‡¶æ‡ßü‡•§'''


#üéØ Practice 04: User Input ‡¶¶‡¶ø‡ßü‡ßá Dictionary ‡¶§‡ßà‡¶∞‡¶ø + Top Scorer ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ

studnets={}

for i in range(3):
    name = input(f"Enter Students name {i+1}: ")
    marks = int(input("Enter his/her Marks: "))
    studnets[name] = marks #We are storing the name as the key and the mark as the value into the dictionary.

def find_top_scorer():
    top_name = max(studnets, key=studnets.get)
    top_score = studnets[top_name]
    return f"Top scorer is {top_name} with {top_score} mark\n"

print(find_top_scorer())


#Practice 05:

# ‡¶è‡¶ï‡¶ü‡¶æ dictionary ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶®‡¶æ‡¶Æ key ‡¶Ü‡¶∞ ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ value
students1 = {
    "Sagar": 92,
    "Rafi": 85,
    "Amena": 78,
    "Ritu": 88
}

#‡¶∏‡¶¨ student's ‡¶®‡¶æ‡¶Æ ‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡ßã
print("All Students Name: ")
for name in students1:
    print(name)

#‡¶∏‡¶¨ student's ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡ßã
print("\nAll Students Marks: ")
for marks in students1.values():
    print(marks)

#‡¶®‡¶æ‡¶Æ ‡¶ì ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶è‡¶ï‡¶∏‡¶æ‡¶•‡ßá ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ì
print("\nAll Students Name & Marks: \n")
for name, marks in students1.items():
    print(f"{name} got {marks} marks")

#‡¶ï‡ßã‡¶®‡ßã ‡¶è‡¶ï‡¶ú‡¶® student ‡¶è‡¶∞ ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ì
print(f"\nSagar's mark is", students1["Sagar"])


